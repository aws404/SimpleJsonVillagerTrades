plugins {
	id "fabric-loom" version "0.11-SNAPSHOT"
	id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

version = System.getenv("VERSION") ? System.getenv("VERSION") : "unversioned"

repositories {
	maven { url = "https://storage.googleapis.com/devan-maven/" }
}

sourceSets {
	datagen {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
		compileClasspath += main.output
		runtimeClasspath += main.output
	}
}

loom {
	runs {
		datagen {
			inherit server
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("datapacks/vanilla")}"
			vmArg "-Dfabric-api.datagen.strict-validation"

			ideConfigGenerated = true
			runDir "build/datagen"
			source sourceSets.datagen
		}
	}

	accessWidenerPath = file("src/main/resources/sjvt.accesswidener")
}

dependencies {
	// Fabric Dependencies
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Mod Dependencies
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", version

	filesMatching("fabric.mod.json") {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	failSilently = true
	projectId = project.project_id
	versionNumber = version
	versionName = System.getenv("VERSION_NAME") ? System.getenv("VERSION_NAME") : version
	versionType = System.getenv("ALPHA") ? "alpha" : "release"
	changelog = System.getenv("CAHNGELOG")
	uploadFile = "./build/libs/SimpleJsonVillagerTrades-${version}.jar"
	dependencies {
		required.project "P7dR8mSH" // Mark Fabric API as a required dependency
	}
}
